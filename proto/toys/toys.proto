syntax = "proto3";

package toys;

option go_package = "Stoys.v1;toys";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Toys API";
    version: "1.0";
    description: "API for managing toys, including creation, update, deletion, and recommendations.";
    contact: {
      name: "Support Team";
      url: "https://yourdomain.com";
      email: "support@yourdomain.com";
    }
  };
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service Toys {
  rpc CreateToy (CreateToyRequest) returns (CreateToyResponse) {
    option (google.api.http) = {
      post: "/v1/toys"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Create a new toy"
      description: "Adds a new toy to the collection."
    };
  }

  rpc DeleteToy (DeleteToyRequest) returns (DeleteToyResponse) {
    option (google.api.http) = {
      delete: "/v1/toys/{toy_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete a toy"
      description: "Removes a toy from the collection using its ID."
    };
  }

  rpc ChangeToy (ChangeToyRequest) returns (ChangeToyResponse) {
    option (google.api.http) = {
      patch: "/v1/toys/{toy.id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update toy details"
      description: "Modifies existing toy information using its ID."
    };
  }

  rpc GetToysByIds (GetToysByIdsRequest) returns (GetToysByIdsResponse) {
    option (google.api.http) = {
      post: "/v1/toys/batch"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Retrieve multiple toys"
      description: "Fetches a list of toys by their IDs."
    };
  }

  rpc GetToy (GetToyRequest) returns (GetToyResponse) {
    option (google.api.http) = {
      get: "/v1/toys/{toy_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get toy details"
      description: "Retrieves information about a single toy using its ID."
    };
  }

  rpc ListToy (ListToyRequest) returns (ListToyResponse) {
    option (google.api.http) = {
      get: "/v1/toys"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List all toys"
      description: "Returns a paginated list of all toys available."
    };
  }

  rpc ListRecommended (ListRecommendedRequest) returns (ListRecommendedResponse) {
    option (google.api.http) = {
      get: "/v1/toys/recommended"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get recommended toys"
      description: "Returns a list of recommended toys based on user preferences or popularity."
    };
  }
}

enum Status {
  STATUS_OK = 0;
  STATUS_INVALID_TITLE = 1;
  STATUS_INVALID_DESC = 2;
  STATUS_INVALID_VALUE = 3;
  STATUS_INVALID_IMAGES = 4;
  STATUS_INVALID_CATEGORIES = 5;
  STATUS_INVALID_RECAGE = 6;
  STATUS_INVALID_MANUFACTURER = 7;
  STATUS_INTERNAL_ERROR = 8;
}

message Toy {
  int64 id = 1;
  string title = 2;
  string desc = 3;
  int64 value = 4;
  repeated string images = 5;
  repeated string skills = 6;
  repeated string categories = 7;
  string recommended_age = 8;
  string manufacturer = 9;
  bool isAvailable = 10;
}

message ToySummary {
  int64 id = 1;
  string title = 2;
  int64 value = 3;
  string image_url = 4;
}

message ToyUpdate {
  int64 id = 1;
  optional string title = 2;
  optional string desc = 3;
  optional int64 value = 4;
  repeated string images = 5;
  repeated string skills = 6;
  repeated string categories = 7;
  optional string recommended_age = 8;
  optional string manufacturer = 9;
  optional bool isAvailable = 10;
}

message Metadata {
  int32 CurrentPage = 1;
  int32 PageSize = 2;
  int32 FirstPage = 3;
  int32 LastPage = 4;
  int32 TotalRecords = 5;
}

message CreateToyRequest {
  string title = 1;
  string desc = 2;
  int64 value = 3;
  repeated string images = 4;
  repeated string skills = 5;
  repeated string categories = 6;
  string recommended_age = 7;
  string manufacturer = 8;
  bool isAvailable = 9;
}

message CreateToyResponse {
  Status status = 1;
  string errorMsg = 2;
  Toy toy = 3;
}

message DeleteToyRequest {
  int64 toy_id = 1;
}

message DeleteToyResponse {
  Status status = 1;
  string errorMsg = 2;
}

message ChangeToyRequest {
  ToyUpdate toy = 1;
}

message ChangeToyResponse {
  Status status = 1;
  string errorMsg = 2;
}

message GetToyRequest {
  int64 toy_id = 1;
}

message GetToyResponse {
  Toy toy = 1;
  Status status = 2;
  string msg = 3;
}

message GetToysByIdsRequest {
  repeated int64 id = 1;
}

message GetToysByIdsResponse {
  repeated ToySummary toy = 1;
  string msg = 2;
}

message ListToyRequest {
  optional int32 page = 1;
  optional int32 page_size = 2;
  optional int64 from = 3;
  optional int64 to = 4;
  optional string sort = 5;
  repeated string sort_safe_list = 6;
  repeated string categories = 7;
  repeated string skills = 8;
  optional string title = 9;
}

message ListToyResponse {
  repeated Toy toys = 1;
  Status status = 2;
  string errorMsg = 3;
  Metadata metadata = 4;
}

message ListRecommendedRequest {}

message ListRecommendedResponse {
  repeated Toy toys = 1;
  Status status = 2;
  string errorMsg = 3;
  Metadata metadata = 4;
}
